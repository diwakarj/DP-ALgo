/*

// Dynamic Pgm : Minimum cost path in a matrix

#include<iostream>
#include<string>

#define R 3
#define C 3

using namespace std;


int min(int a,int b,int c)
{
	if(a<b)
		return (a<c?a:c);
	else
		return (b<c?b:c);
}

int MinCost(int Cost[R][C],int M, int N )
{
	int TC[R][C];

	TC[0][0]=Cost[0][0];

	// populate the first row of cost array 

	for(int i=1;i<=M;i++)
		TC[i][0]=TC[i-1][0]+Cost[i][0];

	//populate the first col of cost array

	for(int j=1;j<=N;j++)
		TC[0][j]=TC[0][j-1]+Cost[0][j];


	for(int i=1;i<=M;i++)
		for(int j=1;j<=N;j++)
			TC[i][j]=Cost[i][j]+min(TC[i-1][j],TC[i][j-1],TC[i-1][j-1]);

	return TC[M][N];

}


int main()
{
	int cost[R][C] = { {1, 2, 3},
                      {4, 8, 2},
                      {1, 5, 3} };

	cout<<MinCost(cost,1,2);

	getchar();

	return 0;
}

*/
